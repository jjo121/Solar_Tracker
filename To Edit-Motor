#include <xc.inc>

extrn	LCD_delay_ms,LCD_delay,delayseveral5us,LCD_delay
extrn   posEW
    
global  MotorSetup, MoveEast, MoveXZRight,MoveXZLeft,count, tempStore, stop;, ADC_Read,ADC_Setup1,ADC_Read1   

psect udata_acs ;reserves space in RAM
count: ds 1
tempStore:ds 1
    
psect	adc_code, class=CODE

MotorSetup:
    movlw	0x00
    movwf	TRISC			; portc is output
    movlw	0x00
    movwf	TRISD			; portd is output
    movlw	0x01
    movwf	count
    return

    
MoveEast:
    movlw	0xB4
    movwf	tempStore
    movf	posEW,W
    subwf	tempStore
    bsf		TRISC,0
    bsf		LATC1
    movlw	0x01
    call	LCD_delay_ms
    movf	posEW,W
    call	delayseveral5us
    bcf		LATC1
    movlw	0x11     
    call	LCD_delay_ms
    movlw	0xA5
    call	delayseveral5us
    movf	tempStore,W
    call	delayseveral5us
    decfsz	count
    bra		MoveEast
    movlw	0x0A
    movwf	count
    bcf		TRISC,0
    return
    
MoveXZRight:
    bsf		TRISC,0
    bsf		LATC2
    movlw	0x01
    call	LCD_delay_ms
    movlw	0x55
    call	delayseveral5us
    bcf		LATC2
    movlw	0x0C     
    call	LCD_delay_ms
    return
MoveXZLeft:
    bsf		TRISC,0
    bsf		LATC2
    movlw	0x01
    call	LCD_delay_ms
    movlw	0x5C
    call	delayseveral5us
    bcf		LATC2
    movlw	0xFF     
    call	LCD_delay_ms
    movlw	0xFF     
    call	LCD_delay_ms
    bcf		TRISC,0
    
  
    ;bra		MoveXZLeft 
stop:
    bsf		TRISC,0
    bsf		LATC2
    movlw	0x01
    call	LCD_delay_ms
    movlw	0x5A
    call	delayseveral5us
    bcf		LATC2
    movlw	0x0C     
    call	LCD_delay_ms
    ;bra		MoveXZLeft
    
    return
    
MoveWest1:
    
    bsf		TRISC,0
    bsf		LATC1
    movlw	0x01
    call	LCD_delay_ms
    movlw	0x01
    call	delayseveral5us
    bcf		LATC1
    movlw	0x13     
    call	LCD_delay_ms
    return
    
    end
    

    
    
