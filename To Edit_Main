#include <xc.inc>

global  Photodiode_0H, Photodiode_0L, Photodiode_1L, Photodiode_1H   
global  Photodiode_2L, Photodiode_2H, Photodiode_3L, Photodiode_3H

global	posEW, SolarL, SolarH

; UART variables 
extrn	UART_Setup, UART_Transmit_Message  ; external uart subroutines

;LCD variables
extrn	LCD_Setup, LCD_Write_Message, LCD_Write_Hex,LCD_delay_ms ; external LCD subroutines

;adc variables
extrn	ADC_Setup0,ADC_Setup1,ADC_Setup2,ADC_Setup3,ADC_Setup4, ADC_Read; external ADC subroutines

;motor variables
extrn	MotorSetup, MoveEast, MoveXZRight,MoveXZLeft, stop

;comparison variables
extrn	status_p0p2_p1p3_l, status_p0p2_p1p3_h, status_p0p1_p2p3_l, status_p0p1_p2p3_h
extrn	difference_p0p2_p1p3_l, difference_p0p2_p1p3_h, difference_p0p1_p2p3_l, difference_p0p1_p2p3_h
extrn	compare_p0p2_p1p3_h, compare_p0p2_p1p3_l, compare_p0p1_p2p3_h, compare_p0p1_p2p3_l

psect	udata_acs   ; reserve data space in access ram

posEW:		    ds	1
Photodiode_0L:	    ds	1
Photodiode_0H:	    ds	1
Photodiode_1L:	    ds	1
Photodiode_1H:	    ds	1
Photodiode_3L:	    ds	1
Photodiode_3H:	    ds	1
Photodiode_2L:	    ds	1
Photodiode_2H:	    ds	1
SolarL:		    ds	1
SolarH:		    ds	1
    
psect	code, abs	
rst: 	org 0x0
 	goto	setup

setup:  call	MotorSetup; Add lines which move motor to 0 positions
	movlw	0x30
	movwf	posEW
	goto	start

measurephotodiode:
	call	ADC_Setup0
	movlw	0x05
	call	LCD_delay_ms
	call    ADC_Read
	call    ADC_Read
	movf    ADRESH,W, A
	movwf   Photodiode_0H    ;high byte stored
	movf    ADRESL,W, A
	movwf   Photodiode_0L    ;low byte stored
	call	ADC_Setup1
	movlw	0x05
	call	LCD_delay_ms
	call    ADC_Read
	call    ADC_Read
	movf    ADRESH,W, A
	movwf   Photodiode_1H    ;high byte stored
	movf    ADRESL,W, A
	movwf   Photodiode_1L    ;low byte stored
	call	ADC_Setup2
	movlw	0x05
	call	LCD_delay_ms
	call    ADC_Read
	call    ADC_Read
	movf    ADRESH,W, A
	movwf   Photodiode_2H    ;high byte stored
	movf    ADRESL,W, A
	movwf   Photodiode_2L    ;low byte stored
	call	ADC_Setup3
	movlw	0x05
	call	LCD_delay_ms
	call    ADC_Read
	call    ADC_Read
	movf    ADRESH,W, A
	movwf   Photodiode_3H    ;high byte stored
	movf    ADRESL,W, A
	movwf   Photodiode_3L    ;low byte stored
	return
	

moveMotorEW1:	;Uses status of high bytes to check whether to move East or West
	movlw	0x01
	cpfseq	status1
	bra	moveMotorWest
	bra	moveMotorEast

moveMotorEW2:	;Uses status of high bytes to check whether to move East or West
	movlw	0x01
	cpfseq	status2
	bra	moveMotorWest
	bra	moveMotorEast

moveMotorEast:
	movlw	0xB3	;179
	cpfslt	posEW
	incf	posEW
	call	MoveEast
	return

moveMotorWest:
	movlw	0x00	;0
	cpfsgt	posEW
	decf	posEW
	call	MoveEast
	return
    
		
start:	
 	call	measurephotodiode
	call	average
	call
	

	end	rst
